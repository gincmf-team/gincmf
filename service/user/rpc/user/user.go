// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

package user

import (
	"context"

	"gincmf/service/user/rpc/types"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Data        = userclient.Data
	InitReply   = userclient.InitReply
	InitRequest = userclient.InitRequest
	UserReply   = userclient.UserReply
	UserRequest = userclient.UserRequest

	User interface {
		Get(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserReply, error)
		Init(ctx context.Context, in *InitRequest, opts ...grpc.CallOption) (*InitReply, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) Get(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserReply, error) {
	client := userclient.NewUserClient(m.cli.Conn())
	return client.Get(ctx, in, opts...)
}

func (m *defaultUser) Init(ctx context.Context, in *InitRequest, opts ...grpc.CallOption) (*InitReply, error) {
	client := userclient.NewUserClient(m.cli.Conn())
	return client.Init(ctx, in, opts...)
}
